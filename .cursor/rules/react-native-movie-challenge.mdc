---
description: 
globs: 
alwaysApply: true
---
# React Native Movie Explorer Challenge Rule

This rule summarizes the requirements and structure for the React Native Movie Explorer hiring challenge project.

## Project Overview
Develop a mobile app using React Native that interacts with a public movie database API (e.g., TMDb). The app enables users to explore and access detailed information about movies.

## Key Requirements
- **App Setup**: Initialized as a React Native project, compatible with Android and iOS.
- **API Integration**: Uses a public movie database API to fetch movie data.
- **State Management**: Uses React Context API, Zustand, or similar.
- **Screens**:
  - `MovieListScreen`: Displays a list of movies.
  - `MovieDetailScreen`: Shows detailed info about a selected movie.
- **Navigation**: Implemented between screens.
- **Error Handling & Loading**: Handles API errors and shows loading indicators.
- **Styling**: Clean, responsive, and usable design.
- **Code Quality**: Modular, commented, and best practices followed.
- **Documentation**: See [README.md](mdc:README.md) for setup and design notes.

## Bonus Features
- Movie search, sort, or filter
- Pagination/infinite scroll
- Unit/integration tests

## Project Structure Guide
- Main app code: [app/](mdc:app)
- Assets: [assets/](mdc:assets)
- Entry point and config: [app.json](mdc:app.json), [package.json](mdc:package.json)
- Documentation: [README.md](mdc:README.md)

## Evaluation Criteria
- Functionality, code quality, UI/UX, and problem-solving

---
For more details, see the full README and explore the [app/](mdc:app) directory for implementation specifics.
